class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {
        int size = INT_MAX;
        int n = nums.size();
        for (int i = 0; i < n; i++) {
            int sum = nums[i];
            if (sum >= target) {
                return 1;
            }
            for (int j = i + 1; j < n; j++) {
                sum += nums[j];
                if (sum >= target) {
                    size = min(size, j - i + 1);//2
                }
            }
        }

        return size==INT_MAX?0:size;
    }
};

class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {
        int size = INT_MAX;
        int n = nums.size(),j=0,i=0;
        int sum=0;
        while(j<n)
        {
            sum+=nums[j];
            if(sum<target)
            {
                j++;
            }
            else{
                while(sum>=target)
                {
                    size=min(size,j-i+1);
                    sum=sum-nums[i];
                    i++;
                }
                j++;
            }
        }
        return size == INT_MAX ? 0 : size;
    }
};
