class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int n=s.length();
        int res=0;
        for(int i=0;i<n;i++)
        {
            unordered_map<char,int>mp;
            for(int j=i;j<n;j++)
            {
               mp[s[j]]++;
               if(mp[s[j]]>1){
                  break;
               }
               res=max(res,j-i+1);
            }
        }
       
        return res;
    }
};

//sliding window 
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
       int i=0,j=0,n=s.length(),ans=0;
       unordered_set<char>set1;
       while(i<n && j<n)
       {
          if(set1.find(s[j])==set1.end()){
            set1.insert(s[j++]);
            ans=max(ans,j-i);
          }
          else{
            set1.erase(s[i++]);
          }
       }
       return ans;
    }
};
